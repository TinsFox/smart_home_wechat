<view class="tui-calendar-class">
  <view class="{{isFixed?'tui-bottom-popup':''}} {{isShow && isFixed?'tui-popup-show':''}}">
    <view class="tui-calendar-header {{radius?'tui-calendar-radius':''}}" catchtouchmove="stop" wx:if="{{isFixed}}">
      <view>日期选择</view>
      <view class="tui-iconfont tui-font-close" hover-class="tui-opacity" hover-stay-time="150" bindtap="hide"></view>
    </view>

    <view class="tui-date-box">
      <view class="tui-iconfont tui-font-arrowleft" style="color:{{yearArrowColor}}" hover-class="tui-opacity" hover-stay-time="150" wx:if="{{arrowType == 1}}" bindtap="changeYear" data-add="0"></view>
      <view class="tui-iconfont tui-font-arrowleft" style="color:{{monthArrowColor}}" hover-class="tui-opacity" hover-stay-time="150" data-add="0" bindtap="changeMonth"></view>
      <view class="tui-date_time">{{ showTitle }}</view>
      <view class="tui-iconfont tui-font-arrowright" style="color:{{monthArrowColor}}" hover-class="tui-opacity" hover-stay-time="150" data-add="1" bindtap="changeMonth"></view>
      <view class="tui-iconfont tui-font-arrowright" style="color:{{yearArrowColor}}" hover-class="tui-opacity" hover-stay-time="150" wx:if="{{arrowType == 1}}" bindtap="changeYear" data-add="1"></view>
    </view>
    <view class="tui-date-header">
      <view class="tui-date">日</view>
      <view class="tui-date">一</view>
      <view class="tui-date">二</view>
      <view class="tui-date">三</view>
      <view class="tui-date">四</view>
      <view class="tui-date">五</view>
      <view class="tui-date">六</view>
    </view>
    <view class="tui-date-content {{isFixed && fixedHeight?'tui-flex-start':''}}" style=" height:{{ isFixed && fixedHeight ? dateHeight * 6 + 'px' : 'auto'}}">
      <block wx:for="{{weekdayArr}}" wx:key="index">
        <view class="tui-date"></view>
      </block>
      <view class="tui-date {{isFixed && fixedHeight?'tui-date-pd_0':''}} {{parse.openDisAbled(year, month, index + 1,min,max)?'tui-opacity':''}} {{(type == 2 && startDate ==(year+'-'+month+'-'+(index+1))) || type == 1?'tui-start-date':''}} {{ (type == 2 && endDate ==(year+'-'+month+'-'+(index+1)))|| type == 1?'tui-end-date':''}}" style="background-color: {{isFixed ? parse.getColor(index,1,color, year, month, startDate, endDate, rangeBgColor, rangeColor,isActiveCurrent,activeDate,activeBgColor,activeColor) : 'transparent'}};height: {{isFixed && fixedHeight ? dateHeight + 'px' : 'auto'}}" wx:for="{{daysArr}}" wx:key="index" bindtap="dateClick" data-index="{{index}}">
        <view class="tui-date-text" style="color: {{isFixed ? parse.getColor(index,2,color, year, month, startDate, endDate, rangeBgColor, rangeColor,isActiveCurrent,activeDate,activeBgColor,activeColor) : parse.getStatusData(3, index,isFixed,status)}}; background-color:{{parse.getStatusData(2,index,isFixed,status)}}">
          <view wx:if="{{isFixed || !parse.getStatusData(4,index,isFixed,status)}}">{{ index + 1 }}</view>
          <view wx:if="{{!parse.getStatusData(4, index,isFixed,status)}}" class="tui-custom-desc {{!lunar && isFixed?'tui-lunar-unshow':''}}">{{ parse.getDescText(index,startDate,endDate,year,month,lunar,daysLunarArr,isFixed,type,startText,endText,status)}}</view>
          <text class="tui-iconfont tui-font-check" wx:if="{{parse.getStatusData(4, index,isFixed,status)}}"></text>
        </view>
        <view class="tui-date-desc" style="color: {{activeColor}}" wx:if="{{!lunar && type == 2 && startDate ==(year+'-'+month+'-'+(index+1)) && startDate != endDate}}">
          {{ startText }}
        </view>
        <view class="tui-date-desc" style="color: {{activeColor}}" wx:if="{{!lunar && type == 2 && endDate == (year+'-'+month+'-'+(index+1))}}">{{ endText }}</view>
      </view>
      <view class="tui-bg-month">{{ month }}</view>
    </view>

    <view class="tui-calendar-op" wx:if="{{isFixed}}" catchtouchmove="stop">
      <view class="tui-calendar-result">
        <text>{{ type == 1 ? activeDate : startDate }}</text>
        <text wx:if="{{endDate}}">至{{ endDate }}</text>
      </view>
      <view class="tui-calendar-btn_box">
        <tui-button type="{{btnType}}" height="72rpx" shape="circle" size="28" bindclick="btnClickFix">确定</tui-button>
      </view>
    </view>
  </view>

  <view class="tui-popup-mask {{isShow ? 'tui-mask-show' : ''}}" catchtouchmove="stop" wx:if="{{isFixed}}" bindtap="hide"></view>
</view>

<wxs module="parse">
  var getStatus = function(type, index, isFixed, status) {
    var val = ['', 'transparent', '#333', ''][type - 1];
    if (!isFixed && status && status.length > 0) {
      var item = status[index];
      if (item) {
        switch (type) {
          case 1:
            val = item.text;
            break;
          case 2:
            val = item.bgColor;
            break;
          case 3:
            val = item.color;
            break;
          case 4:
            val = item.check;
            break;
          default:
            break;
        }
      }
    }
    return val;
  };
  module.exports = {
    openDisAbled: function(year, month, day, min, max) {
      var bool = true;
      var date = year + "/" + month + "/" + day;
      var minDate = min.year + "/" + min.month + "/" + min.day;
      var maxDate = max.year + "/" + max.month + "/" + max.day;
      var timestamp = getDate(date).getTime();
      if (timestamp >= getDate(minDate).getTime() && timestamp <= getDate(maxDate).getTime()) {
        bool = false;
      }
      return bool;
    },
    getColor: function(index, type, color, year, month, startDate, endDate, rangeBgColor, rangeColor, isActiveCurrent, activeDate, activeBgColor, activeColor) {
      color = type == 1 ? '' : color;
      var day = index + 1;
      var date = year + "-" + month + "-" + day;
      var reg = getRegExp("-", "g")
      var timestamp = getDate(date.replace(reg, '/')).getTime();
      var start = startDate.replace(reg, '/');
      var end = endDate.replace(reg, '/');
      if ((isActiveCurrent && activeDate == date) || startDate == date || endDate == date) {
        color = type == 1 ? activeBgColor : activeColor;
      } else if (endDate && timestamp > getDate(start).getTime() && timestamp < getDate(end).getTime()) {
        color = type == 1 ? rangeBgColor : rangeColor;
      }
      return color;
    },
    getStatusData: getStatus,
    getDescText: function(index, startDate, endDate, year, month, lunar, daysLunarArr, isFixed, type, startText, endText, status) {
      var text = lunar ? daysLunarArr[index] : "";
      if (isFixed && type == 2) {
        if (lunar) {
          var date = year + "-" + month + "-" + (index + 1);
          if (startDate == date && startDate != endDate) {
            text = startText
          } else if (endDate == date) {
            text = endText
          }
        }
      } else {
        var status = getStatus(1, index, isFixed, status);
        if (status)
          text = status;
      }
      return text;
    }

  }
</wxs>